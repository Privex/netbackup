#####################################################################
# This is an example ENV file for Privex's netbackup.sh
# (Linux Network Config Backup Script)
# Official repo: https://github.com/Privex/netbackup
# Released under X11 / MIT license
# ------------------------------------------------------------------
# Unlike common '.env' files, this ENV file is actually sourced
# straight into the bash script, thus you may use any valid bash
# syntax within this ENV file, allowing you to dynamically generate
# your ENV vars using Linux/UNIX programs, functions, and/or
# bash built-in functionality.
#
# To use an ENV file with netbackup.sh - simply place your ENV
# key/value statements into either ~/.netbackup.env
# or the global /etc/netbackup.env
#
# The local homedir file is tried first, the global one is only
# read if the local home directory .netbackup.env doesn't exist.
#
# ------------------------------------------------------------------
# (C) 2021 Privex Inc. - https://www.privex.io/ 
# BUY A SERVER TODAY - AT PRIVEX, PRIVACY IS AFFORABLE! 
# VPS's from $0.99/mo - Dedi's from $40/mo 
# We take: BTC LTC BCH EOS DOGE XMR HIVE HBD + others 
#
#####################################################################

####
# You can use BACKUP_DIR to change the folder where netbackup.sh
# backs your configs up to.
# It will automatically create the folder and any missing parent 
# folders automatically, so long as it has filesystem permission
# to do so :)
####
BACKUP_DIR=/mnt/remote/net-backups


####
# By default, QUIET is set to 0 (disabled), which results in
# a lot of progress and file output location information
# being printed to stderr.
# By setting QUIET=1, only the license/copyright/version notice
# will be printed to stderr, and the timestamped output folder
# will be printed to stdout.
####
QUIET=1


####
# If for some reason you really need to disable one of the types of
# backups (firewall in-memory, firewall on-disk, network / interface),
# you can set the option to 0 like the commented out examples below.
#
# Generally all of the config files and dumps are very small, and a
# full backup with the default files/backup types would be
# below 200kb (both kilo and kibibytes) - i.e. below 1/4 of a megabyte,
# and should fit on a 1.44mb floppy disk without problems :)
####

#MEMORY_BACKUP=0
#DISK_BACKUP=0
#IFACE_BACKUP


# Override the default netplan config file name of 50-cloud-init.yaml
NETPLAN_FILE=10-default.yaml


####
# As the ENV file is sourced into the bash script, you don't have to
# stick with the standard ENV syntax - you can actually use any bash
# syntax, run arbitrary code, define functions etc. :)
#
# Generally the most advanced bash syntax that people may take advantage of,
# is the ability to append/overwrite/remove elements from the arrays
# used in the script - mainly BK_FILES_IFACE and BK_FILES.
####


################################
# Add the file '/etc/netplan/60-custom.yaml' to the list of interface
# config files that will be backed up into BACKUP_DIR/ifaces/disk/
BK_FILES_IFACE+=("/etc/netplan/60-custom.yaml")


################################
# Add the FOLDER /etc/ufw/ to the list of files/folders that will
# be backed up into BACKUP_DIR/ipt/disk/
BK_FILES+=("/etc/ufw")


################################
# The 'date' compatible date formatting string, used to generate
# the timestamped folder name for OUT_DIR
# See 'man strftime' for a list of available datetime format characters,
# such as %Y = 4 digit year, %m = 2 digit month, %d = 2 digit day etc.
DATE_FMT="%Y-%m-%d_%H.%M.%S"


################################
# The Linux/UNIX timezone code used as the timezone for the generated
# backup timestamp.
#
# For example:
#   - 'UTC' for universal co-ordinated time (+00:00)
#   - 'Europe/London' for UK time (GMT/BST +00:00 / +01:00 DST)
#   - 'America/New_York' for US Eastern Time (EST/EDT -05:00 / -04:00 DST)
#   - 'Asia/Tokyo' for Japan Standard Time (JST +09:00 / No DST)
#
# Use the command 'tzselect' on Linux to find out the correct timezone
# code for a certain region of the world.
DATE_TZ="UTC"



################################
# The variable BK_NAME normally holds the generated filename-safe 
# timestamp to be used as the folder name for your timestamped backup.
#
# If DATE_FMT and DATE_TZ don't fit your needs for customizing the
# backup folder name, then you can completely override the name of
# the output backup folder using BK_NAME.
#
# If you override this, and you run automated hourly/monthly/whatever 
# backups using netbackup.sh - then you must make sure that 
# BK_NAME is dynamically set during each execution - and unique 
# to avoid potential conflicts (unless your intention is to have
# the original backup folder be overwritten every time you run the script).
#
# You can achieve a dynamic and unique value by using an inline subshell
# to run a program/function to generate a dynamic + (semi-)unique 
# name for your backup folders

# BK_NAME="netbak-$(TZ='Asia/Tokyo' date +"%Y-%m-%d")"




################################
# The variable 'OUT_DIR' is normally dynamically set during the script,
# and it's unlikely that anyone would need to change this, but if you find
# a strange scenario where changing BACKUP_DIR + BK_NAME doesn't work for
# you, then you can set this env variable to the absolute path to the
# current timestamped folder which will be used as the backup output folder.
#
# It's usually generated by cd'ing into BK_NAME from BACKUP_DIR, and then
# storing the output of 'pwd' into OUT_DIR to get a clean absolute path
# to the timestamped backup folder.

# OUT_DIR="$(cd "$BK_NAME" && pwd)"


